name: Deploy to Server

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to server
      env:
        PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.SERVER_HOST }}
        USER: github-actions
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -v -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << 'EOF'
          set -e
          echo "Changing to project directory"
          cd /home/nick/workshop
          
          echo "Configuring Git safe directory"
          git config --global --add safe.directory /home/nick/workshop
          
          echo "Updating repository"
          git pull origin main
          
          echo "Stopping and removing existing container"
          docker compose down || true
          
          echo "Building new Docker image"
          docker compose build \
            --build-arg VITE_FIREBASE_API_KEY="${FIREBASE_API_KEY}" \
            --build-arg VITE_FIREBASE_AUTH_DOMAIN="${FIREBASE_AUTH_DOMAIN}" \
            --build-arg VITE_FIREBASE_PROJECT_ID="${FIREBASE_PROJECT_ID}" \
            --build-arg VITE_FIREBASE_STORAGE_BUCKET="${FIREBASE_STORAGE_BUCKET}" \
            --build-arg VITE_FIREBASE_MESSAGING_SENDER_ID="${FIREBASE_MESSAGING_SENDER_ID}" \
            --build-arg VITE_FIREBASE_APP_ID="${FIREBASE_APP_ID}" \
            --build-arg VITE_FIREBASE_MEASUREMENT_ID="${FIREBASE_MEASUREMENT_ID}"
          
          echo "Starting new container"
          docker compose up -d
          
          echo "Deployment completed successfully"
        EOF
